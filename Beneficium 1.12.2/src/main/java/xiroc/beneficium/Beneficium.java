package xiroc.beneficium;

import java.io.File;
import java.net.SocketAddress;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import io.netty.buffer.ByteBufAllocator;
import io.netty.channel.Channel;
import io.netty.channel.ChannelFuture;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelPipeline;
import io.netty.channel.ChannelProgressivePromise;
import io.netty.channel.ChannelPromise;
import io.netty.util.Attribute;
import io.netty.util.AttributeKey;
import io.netty.util.concurrent.EventExecutor;
import net.minecraft.client.Minecraft;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemPickaxe;
import net.minecraft.item.ItemStack;
import net.minecraft.network.EnumPacketDirection;
import net.minecraft.network.NetworkManager;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.text.TextFormatting;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Loader;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.Mod.Instance;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLServerStoppingEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.common.versioning.ArtifactVersion;
import net.minecraftforge.fml.relauncher.FMLLaunchHandler;
import net.minecraftforge.fml.relauncher.Side;
import xiroc.beneficium.common.advancement.trigger.TriggerRegistry;
import xiroc.beneficium.common.block.tileentity.TileEntityTreasureChest;
import xiroc.beneficium.common.item.ItemArtifactPickaxe;
import xiroc.beneficium.common.item.ItemTalismanOfTheBenefactor;
import xiroc.beneficium.common.loot.LootTableHelper;
import xiroc.beneficium.common.loot.TreasurePositionFile;
import xiroc.beneficium.common.network.PacketServerConfig;
import xiroc.beneficium.common.network.PacketSound;
import xiroc.beneficium.common.proxy.ServerProxy;
import xiroc.beneficium.common.util.ConfigHelper;
import xiroc.beneficium.common.util.CreativeTabBeneficium;
import xiroc.beneficium.common.util.EventManager;
import xiroc.beneficium.common.util.GuiHandler;
import xiroc.beneficium.common.util.NetHelper;
import xiroc.beneficium.common.util.Reference;
import xiroc.beneficium.common.world.WorldGenTreasureChest;

@Mod(modid = Reference.MODID, name = Reference.NAME, version = Reference.VERSION2, acceptedMinecraftVersions = Reference.MC_VERSIONS, dependencies = Reference.DEPENDENCIES)
public class Beneficium {

	@Instance
	public static Beneficium beneficium;

	public static final Logger logger = LogManager.getLogger(Reference.NAME);

	public static final SimpleNetworkWrapper NET = NetworkRegistry.INSTANCE.newSimpleChannel(Reference.MODID);

	public static final CreativeTabBeneficium tabBeneficium = new CreativeTabBeneficium();

	@SidedProxy(serverSide = "xiroc.beneficium.common.proxy.ServerProxy", clientSide = "xiroc.beneficium.common.proxy.ClientProxy")
	public static ServerProxy proxy;

	public static int packetDiscriminator = 0;

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		ModMetadata data = event.getModMetadata();
		data.autogenerated = false;
		data.name = TextFormatting.GOLD + "Beneficium";
		data.authorList.add("XIROC");
		data.version = Reference.VERSION;
		data.logoFile = "assets/beneficium/textures/logo/logo.png";
		data.url = "http://xiroc.ovh/beneficium/beneficium";
		data.description = "You can download an alternative texturepack for the talismans here: "
				+ NetHelper.resourcePackURL;
		MinecraftForge.EVENT_BUS.register(new EventManager());
		if(isSide(Side.CLIENT))
			MinecraftForge.EVENT_BUS.register(new EventManager.ClientEventManager());
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		LootTableHelper.registerLootTables();
		TriggerRegistry.register();
		if (!ConfigHelper.loaded)
			ConfigHelper.load();
		proxy.load();
		NET.registerMessage(PacketSound.PacketHanderSound.class, PacketSound.class, packetDiscriminator++, Side.CLIENT);
		NET.registerMessage(PacketServerConfig.PacketHandlerServerConfig.class, PacketServerConfig.class,
				packetDiscriminator++, Side.CLIENT);
		NetworkRegistry.INSTANCE.registerGuiHandler(beneficium, new GuiHandler());
		GameRegistry.registerTileEntity(TileEntityTreasureChest.class, locate("treasure"));
		if (ConfigHelper.getBoolean("generate_treasure"))
			GameRegistry.registerWorldGenerator(new WorldGenTreasureChest(), 1);
		/*
		 * if (isSide(Side.SERVER)) treasurePositionFile = new TreasurePositionFile( new
		 * File(Loader.instance().getConfigDir(), "Beneficium/treasurePositions.txt"));
		 */
	}

	public static ResourceLocation locate(String path) {
		return new ResourceLocation(Reference.MODID, path);
	}

	public static boolean isSide(Side side2) {
//		logger.info("{}, {}",FMLCommonHandler.instance().getSide(), FMLCommonHandler.instance().getSide().equals(side2));
		return FMLCommonHandler.instance().getSide().equals(side2);
	}

}
